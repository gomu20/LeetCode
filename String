class Solution {
    public void reverseString(char[] s) {
         
        int left=0;
        int right=s.length-1;
        while(left<right){
            char temp=s[left];
             s[left]=s[right];
             s[right]=temp;
             

            left++;
            right--;
        }
                         
        }
       
        
    }
   
class Solution {
    public String reverseVowels(String s) {
        int left=0;
        int right=s.length()-1;
        char[] ch=s.toCharArray();
        String vowels="aeiouAEIOU";
        while(left<right){
            while(left<right && vowels.indexOf(ch[left])==-1 ){
                left++;

            }
            while(left<right && vowels.indexOf(ch[right])==-1 ){
                right--;

            }
           char temp=ch[right];
           ch[right]=ch[left];
           ch[left]=temp;
           left++;
           right--;
            
            }
       return new String (ch);
    }
}
class Solution {
    public boolean isPalindrome(String s) {
       

int left=0;
       int right=s.length()-1;

        while(left<right){

           while(left<right && !Character.isLetterOrDigit(s.charAt(left))){
            left++;
           }
           while(left<right && !Character.isLetterOrDigit(s.charAt(right))){
            right--;
           }
if
(Character.toLowerCase(s.charAt(left))!= Character.toLowerCase(s.charAt(right))){
return false;
}
       left++;
       right--;
        }
        return true;
        
    }
}
